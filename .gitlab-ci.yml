variables:
  PACKAGE_PATH: /go/src/gitlab.com/iren.vasilevna/catalogue
 
  # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  GROUP: weaveworksdemos
  COMMIT: $CI_BUILD_REF
  TAG: $CI_COMMIT_TAG 
  REPO: catalogue

  DOCKER_TLS_CERTDIR: "/certs"


stages:
  - dep
  - test
  # - build
 
# A hack to make Golang-in-Gitlab happy
.anchors:
  - &inject-gopath
      mkdir -p $(dirname ${PACKAGE_PATH})
      && ln -s ${CI_PROJECT_DIR} ${PACKAGE_PATH}
      && cd ${PACKAGE_PATH}
 
dep:
  stage: dep
  tags:
#    - docker
  services:
    - name: docker:dind
  image: docker:stable
  before_script:
    - *inject-gopath
  script: 
    - docker version
    - docker build  -f ./vendor ./vendor -t test-tag
    #- apk update && apk add bash && apk add sudo

    #- go version

   # - go get -u github.com/FiloSottile/gvt
   # - gvt restore
   # - go get -u github.com/mattn/goveralls
    
  #go mod tidy && go mod vendor
  artifacts:
    name: "vendor-$CI_PIPELINE_ID"
    paths:
      - vendor/vendor-$CI_PIPELINE_ID
    expire_in: 1 hour


  after_script:
    - ls -a vendor
    - ls -a 


test:
  stage: test
  
  only:
    - branches
  except:
    - master

  dependencies:
    - dep
  script:
    - ls -a ./vendor
    - docker version
