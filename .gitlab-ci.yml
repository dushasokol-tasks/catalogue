variables:
  PACKAGE_PATH: /go/src/gitlab.com/iren.vasilevna/catalogue
 
  # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  GROUP: weaveworksdemos
  COMMIT: $CI_BUILD_REF
  TAG: $CI_COMMIT_TAG 
  REPO: catalogue
 
stages:
  - dep
  - test
  # - build
 
# A hack to make Golang-in-Gitlab happy
.anchors:
  - &inject-gopath
      mkdir -p $(dirname ${PACKAGE_PATH})
      && ln -s ${CI_PROJECT_DIR} ${PACKAGE_PATH}
      && cd ${PACKAGE_PATH}
 
dep:
  stage: dep
  image: golang:1.14.1-buster
  before_script:
    - *inject-gopath
  script: 
    - go version
    - go get -u github.com/FiloSottile/gvt
    - gvt restore
    - go get -u github.com/mattn/goveralls
    
  #go mod tidy && go mod vendor
  artifacts:
    name: "vendor-$CI_PIPELINE_ID"
    paths:
      - vendor/
    expire_in: 1 hour

test:
  stage: test
  dependencies:
    - dep
  image: docker:18
  services:
    - docker:dind
  before_script:
    - *inject-gopath
  script: 
    - set -e
    - ./scripts/build.sh
    - echo $PWD
    - ./test/test.sh unit.py
    - ./test/test.sh container.py --tag $TAG
